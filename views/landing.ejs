<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notefy</title>

    <!-- CSS file links -->

    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/login.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
</head>

<body>


    <!-- animated bubbles -->
    <div class="area">
        <ul class="circles">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>

    <div class="context">

        <h1>Most Welcome to <span>{NOTEFY}</span> </h1>
        <p class="p_1">Here you can get notes as well as can upload your own notes</p>
        <div class="loginsec">
            <p class="p_2 pb-sm-4 pb-lg-1">You need to login or Register first</p>
            <div class="container">
                <div class="row gy-3 gx-3">
                    <div class="col-lg-6 col-12 login">
                        <div class="loginbtn">Login</div>
                    </div>
                    <div class="col-lg-6 col-12 register">
                        <div class="registerbtn">Register</div>
                    </div>

                </div>
            </div>

        </div>
    </div>

    <!-- login model -->
    <div class="overlay"></div>

    <div class="loginform">
        <p class="cross1">&times;</p>
        <h1>LOGIN</h1>
        <form action="/login" method="post" class="form">
            <div class="inputbox">
                <input required="required" type="text" name="username">
                <span>@Username</span>
                <i></i>
            </div>
            <div class="inputbox">
                <input required="required" type="password" name="password">
                <span>Password</span>
                <i></i>
            </div>
            <div class="form-btn">
                <button>Login</button>
                <p>Do not have any account <span class="reg-span">Register</span></p>
            </div>


        </form>
    </div>
    <!-- register model -->

    <div class="registerform">
        <p class="cross2">&times;</p>
        <h1>REGISTER</h1>
        <form action="/register" method="post" class="form">
            <div class="inputbox">
                <input required="required" type="text" name="fullname">
                <span>Name</span>
                <i></i>
            </div>
            <div class="inputbox">
                <input required="required" type="text" name="username">
                <span>@Username</span>
                <i></i>
            </div>
            <div class="inputbox">
                <input required="required" type="email" name="email">
                <span>Email</span>
                <i></i>
            </div>
            <div class="inputbox">
                <input required="required" type="password" name="password">
                <span>Password</span>
                <i></i>
            </div>
            <div class="inputbox">
                <input required="required" type="password" name="confirmpassword">
                <span>Confirm Password</span>
                <i></i>
            </div>
            <div class="form-btn">
                <button>Register</button>
                <p>Already have an account <span class="log-span">Login</span></p>
            </div>


        </form>
    </div>










    <!-- JS file links -->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
    <script src="/js/script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        var urlParams = new URLSearchParams(window.location.search);
        let data = urlParams.get('message');
        if (urlParams.has('success') && urlParams.get('success') && data == "Wrong PassWord") {
            Swal.fire({
                icon: 'error',
                title: `${data}`,
                text: 'Plese Enter correct Credential',
                confirmButtonText: 'Try Again'
            })
        }
        else if (urlParams.has('success') && urlParams.get('success') && data == "User Not Found") {
            Swal.fire({
                icon: 'error',
                title: `${data}`,
                text: 'Plese enter a valid @username',
                confirmButtonText: 'Try Again'
            })
        }
        else if (urlParams.has('success') && urlParams.get('success') && data == "Please login first") {
            Swal.fire({
                
                title: `${data}`,
                denyButtonText: `Ok`,
            })
        }
        else if (urlParams.has('success') && urlParams.get('success') && data == "Registration Successful") {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'success',
                title: 'Registered successfully'
            })
        }
        else if (urlParams.has('success') && urlParams.get('success') && data == "Successfully Logged Out") {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 1500,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: 'success',
                title: `${data}`
            })
        }
    </script>





</body>

</html>